---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: Service
metadata:
  name: redis-vector-store-0
spec:
  type: ClusterIP
  ports:
  - port: 9001
    targetPort: 6379
    protocol: TCP
    name: redis-vector-store-0
  - port: 9002
    targetPort: 8001
    protocol: TCP
    name: insight-redis-vector-store-0
  selector:
    app: redis-vector-store-0
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-vector-store-0
  labels:
    app: redis-vector-store-0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-vector-store-0
  template:
    metadata:
      labels:
        app: redis-vector-store-0
    spec:
      securityContext: {}
      containers:
      - name: redis-vector-db
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        image: redis/redis-stack:7.2.0-v9
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /data
          name: data-volume
        - mountPath: /redisinsight
          name: redisinsight-volume
        - mountPath: /tmp
          name: tmp
        ports:
        - name: redis-service
          containerPort: 6379
          protocol: TCP
        - name: redis-insight
          containerPort: 8001
          protocol: TCP
        startupProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 120
        resources: {}
      volumes:
      - name: data-volume
        emptyDir: {}
      - name: redisinsight-volume
        emptyDir: {}
      - name: tmp
        emptyDir: {}
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-tei-0
data:
  MODEL_ID: BAAI/bge-large-en-v1.5
  PORT: '9003'
  http_proxy: ''
  https_proxy: ''
  no_proxy: ''
  NUMBA_CACHE_DIR: /tmp
  TRANSFORMERS_CACHE: /tmp/transformers_cache
  HF_HOME: /tmp/.cache/huggingface
  MAX_WARMUP_SEQUENCE_LENGTH: '512'
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: Service
metadata:
  name: tei-0
spec:
  type: ClusterIP
  ports:
  - port: 9003
    targetPort: 9003
    protocol: TCP
    name: tei-0
  selector:
    app: tei-0
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tei-0
  labels:
    app: tei-0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tei-0
  template:
    metadata:
      labels:
        app: tei-0
    spec:
      securityContext: {}
      containers:
      - name: tei
        envFrom:
        - configMapRef:
            name: config-tei-0
        securityContext: {}
        image: ghcr.io/huggingface/text-embeddings-inference:cpu-1.5
        imagePullPolicy: IfNotPresent
        args:
        - --auto-truncate
        volumeMounts:
        - mountPath: /data
          name: model-volume
        - mountPath: /dev/shm
          name: shm
        - mountPath: /tmp
          name: tmp
        ports:
        - name: http
          containerPort: 9003
          protocol: TCP
        livenessProbe:
          failureThreshold: 24
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 2
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 2
        startupProbe:
          failureThreshold: 120
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        resources: {}
      volumes:
      - name: model-volume
        persistentVolumeClaim:
          claimName: model-pvc
      - name: shm
        emptyDir:
          medium: Memory
          sizeLimit: 1Gi
      - name: tmp
        emptyDir: {}
      terminationGracePeriodSeconds: 60
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-tgi-0
data:
  MODEL_ID: Intel/neural-chat-7b-v3-3
  PORT: '9004'
  http_proxy: ''
  https_proxy: ''
  no_proxy: ''
  HABANA_LOGS: /tmp/habana_logs
  NUMBA_CACHE_DIR: /tmp
  HF_HOME: /tmp/.cache/huggingface
  CUDA_GRAPHS: '0'
  HF_HUB_DISABLE_PROGRESS_BARS: '1'
  HF_HUB_ENABLE_HF_TRANSFER: '0'
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: Service
metadata:
  name: tgi-0
spec:
  type: ClusterIP
  ports:
  - port: 9004
    targetPort: 9004
    protocol: TCP
    name: tgi-0
  selector:
    app: tgi-0
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tgi-0
  labels:
    app: tgi-0
spec:
  selector:
    matchLabels:
      app: tgi-0
  template:
    metadata:
      labels:
        app: tgi-0
    spec:
      securityContext: {}
      containers:
      - name: tgi
        envFrom:
        - configMapRef:
            name: config-tgi-0
        securityContext: {}
        image: ghcr.io/huggingface/text-generation-inference:2.4.0-intel-cpu
        imagePullPolicy: IfNotPresent
        volumeMounts:
        - mountPath: /data
          name: model-volume
        - mountPath: /dev/shm
          name: shm
        - mountPath: /tmp
          name: tmp
        ports:
        - name: http
          containerPort: 9004
          protocol: TCP
        livenessProbe:
          failureThreshold: 24
          initialDelaySeconds: 8
          periodSeconds: 8
          timeoutSeconds: 4
          tcpSocket:
            port: http
        readinessProbe:
          initialDelaySeconds: 16
          periodSeconds: 8
          timeoutSeconds: 4
          tcpSocket:
            port: http
        startupProbe:
          failureThreshold: 180
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 2
          tcpSocket:
            port: http
        resources: {}
      volumes:
      - name: model-volume
        persistentVolumeClaim:
          claimName: model-pvc
      - name: shm
        emptyDir:
          medium: Memory
          sizeLimit: 1Gi
      - name: tmp
        emptyDir: {}
      terminationGracePeriodSeconds: 120
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-tei-1
data:
  MODEL_ID: BAAI/bge-reranker-base
  PORT: '9005'
  http_proxy: ''
  https_proxy: ''
  no_proxy: ''
  NUMBA_CACHE_DIR: /tmp
  TRANSFORMERS_CACHE: /tmp/transformers_cache
  HF_HOME: /tmp/.cache/huggingface
  MAX_WARMUP_SEQUENCE_LENGTH: '512'
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: Service
metadata:
  name: tei-1
spec:
  type: ClusterIP
  ports:
  - port: 9005
    targetPort: 9005
    protocol: TCP
    name: tei-1
  selector:
    app: tei-1
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tei-1
  labels:
    app: tei-1
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tei-1
  template:
    metadata:
      labels:
        app: tei-1
    spec:
      securityContext: {}
      containers:
      - name: tei
        envFrom:
        - configMapRef:
            name: config-tei-1
        securityContext: {}
        image: ghcr.io/huggingface/text-embeddings-inference:cpu-1.5
        imagePullPolicy: IfNotPresent
        args:
        - --auto-truncate
        volumeMounts:
        - mountPath: /data
          name: model-volume
        - mountPath: /dev/shm
          name: shm
        - mountPath: /tmp
          name: tmp
        ports:
        - name: http
          containerPort: 9005
          protocol: TCP
        livenessProbe:
          failureThreshold: 24
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 2
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 2
        startupProbe:
          failureThreshold: 120
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        resources: {}
      volumes:
      - name: model-volume
        persistentVolumeClaim:
          claimName: model-pvc
      - name: shm
        emptyDir:
          medium: Memory
          sizeLimit: 1Gi
      - name: tmp
        emptyDir: {}
      terminationGracePeriodSeconds: 60
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-tei-2
data:
  MODEL_ID: BAAI/bge-base-en-v1.5
  PORT: '9006'
  http_proxy: ''
  https_proxy: ''
  no_proxy: ''
  NUMBA_CACHE_DIR: /tmp
  TRANSFORMERS_CACHE: /tmp/transformers_cache
  HF_HOME: /tmp/.cache/huggingface
  MAX_WARMUP_SEQUENCE_LENGTH: '512'
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: Service
metadata:
  name: tei-2
spec:
  type: ClusterIP
  ports:
  - port: 9006
    targetPort: 9006
    protocol: TCP
    name: tei-2
  selector:
    app: tei-2
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tei-2
  labels:
    app: tei-2
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tei-2
  template:
    metadata:
      labels:
        app: tei-2
    spec:
      securityContext: {}
      containers:
      - name: tei
        envFrom:
        - configMapRef:
            name: config-tei-2
        securityContext: {}
        image: ghcr.io/huggingface/text-embeddings-inference:cpu-1.5
        imagePullPolicy: IfNotPresent
        args:
        - --auto-truncate
        volumeMounts:
        - mountPath: /data
          name: model-volume
        - mountPath: /dev/shm
          name: shm
        - mountPath: /tmp
          name: tmp
        ports:
        - name: http
          containerPort: 9006
          protocol: TCP
        livenessProbe:
          failureThreshold: 24
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 2
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 2
        startupProbe:
          failureThreshold: 120
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        resources: {}
      volumes:
      - name: model-volume
        persistentVolumeClaim:
          claimName: model-pvc
      - name: shm
        emptyDir:
          medium: Memory
          sizeLimit: 1Gi
      - name: tmp
        emptyDir: {}
      terminationGracePeriodSeconds: 60
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-embedding-tei-langchain-0
data:
  HEALTHCHECK_ENDPOINT: tei-0:9003
  TEI_EMBEDDING_ENDPOINT: http://tei-0:9003
  http_proxy: ''
  https_proxy: ''
  no_proxy: ''
  TRANSFORMERS_CACHE: /tmp/transformers_cache
  HF_HOME: /tmp/.cache/huggingface
  LOGFLAG: ''
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: Service
metadata:
  name: embedding-tei-langchain-0
spec:
  type: ClusterIP
  ports:
  - port: 9007
    targetPort: 6000
    protocol: TCP
    name: embedding-tei-langchain-0
  selector:
    app: embedding-tei-langchain-0
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: apps/v1
kind: Deployment
metadata:
  name: embedding-tei-langchain-0
  labels:
    app: embedding-tei-langchain-0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: embedding-tei-langchain-0
  template:
    metadata:
      labels:
        app: embedding-tei-langchain-0
    spec:
      securityContext: {}
      initContainers:
      - name: wait-for-remote-service
        image: busybox
        command:
        - sh
        - -c
        - until nc -z -v -w30 $HEALTHCHECK_ENDPOINT 80; do echo "Waiting for remote service..."; sleep 5; done
        envFrom:
        - configMapRef:
            name: config-embedding-tei-langchain-0
      containers:
      - name: embedding-usvc
        envFrom:
        - configMapRef:
            name: config-embedding-tei-langchain-0
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        image: opea/embedding:latest
        imagePullPolicy: Always
        ports:
        - name: embedding-usvc
          containerPort: 6000
          protocol: TCP
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        livenessProbe:
          failureThreshold: 24
          httpGet:
            path: v1/health_check
            port: embedding-usvc
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: v1/health_check
            port: embedding-usvc
          initialDelaySeconds: 5
          periodSeconds: 5
        startupProbe:
          failureThreshold: 120
          httpGet:
            path: v1/health_check
            port: embedding-usvc
          initialDelaySeconds: 5
          periodSeconds: 5
        resources: {}
      volumes:
      - name: tmp
        emptyDir: {}
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-prepare-doc-redis-prep-0
data:
  HEALTHCHECK_ENDPOINT: tei-0:9003
  TEI_EMBEDDING_ENDPOINT: http://tei-0:9003
  DATAPREP_COMPONENT_NAME: OPEA_DATAPREP_REDIS
  REDIS_URL: redis://redis-vector-store-0:9001
  INDEX_NAME: rag-redis
  KEY_INDEX_NAME: file-keys
  SEARCH_BATCH_SIZE: '10'
  HUGGINGFACEHUB_API_TOKEN: NA
  HF_HOME: /tmp/.cache/huggingface
  http_proxy: ''
  https_proxy: ''
  no_proxy: ''
  LOGFLAG: ''
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: Service
metadata:
  name: prepare-doc-redis-prep-0
spec:
  type: ClusterIP
  ports:
  - port: 9008
    targetPort: 5000
    protocol: TCP
    name: prepare-doc-redis-prep-0
  selector:
    app: prepare-doc-redis-prep-0
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prepare-doc-redis-prep-0
  labels:
    app: prepare-doc-redis-prep-0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prepare-doc-redis-prep-0
  template:
    metadata:
      labels:
        app: prepare-doc-redis-prep-0
    spec:
      securityContext: {}
      initContainers:
      - name: wait-for-remote-service
        image: busybox
        command:
        - sh
        - -c
        - until nc -z -v -w30 $HEALTHCHECK_ENDPOINT 80; do echo "Waiting for remote service..."; sleep 5; done
        envFrom:
        - configMapRef:
            name: config-prepare-doc-redis-prep-0
      containers:
      - name: data-prep
        envFrom:
        - configMapRef:
            name: config-prepare-doc-redis-prep-0
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: false
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        image: opea/dataprep:latest
        imagePullPolicy: Always
        ports:
        - name: data-prep
          containerPort: 5000
          protocol: TCP
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        livenessProbe:
          failureThreshold: 24
          httpGet:
            path: v1/health_check
            port: data-prep
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: v1/health_check
            port: data-prep
          initialDelaySeconds: 5
          periodSeconds: 5
        startupProbe:
          failureThreshold: 120
          httpGet:
            path: v1/health_check
            port: data-prep
          initialDelaySeconds: 5
          periodSeconds: 5
        resources: {}
      volumes:
      - name: tmp
        emptyDir: {}
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-rag-agent-0
data:
  no_proxy: ''
  http_proxy: ''
  https_proxy: ''
  llm_engine: tgi
  strategy: rag_agent_llama
  recursion_limit: '10'
  model: Intel/neural-chat-7b-v3-3
  temperature: '0.1'
  max_new_tokens: '8192'
  stream: 'false'
  tools: /home/user/tools/worker_agent_tools.yaml
  require_human_feedback: 'false'
  llm_endpoint_url: http://tgi-0:9004
  RETRIEVAL_TOOL_URL: http://app-backend:8888/v1/app-backend/rag_agent_0
  PORT: '9095'
  OPENAI_API_KEY: NA
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: Service
metadata:
  name: rag-agent-0
spec:
  selector:
    app: rag-agent-0
  ports:
  - protocol: TCP
    port: 9009
    targetPort: 9095
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rag-agent-0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rag-agent-0
  template:
    metadata:
      labels:
        app: rag-agent-0
    spec:
      initContainers:
      - name: agentqna-tools
        image: curlimages/curl:latest
        command:
        - /bin/sh
        - -c
        args:
        - |
          TOOLS_GIT_URL="https://github.com/wanhakim/GenAIStudio/tree/main/app-backend/templates/tools"
          OWNER=$(echo ${TOOLS_GIT_URL} | sed -E 's|https://github.com/([^/]+)/([^/]+)/tree/([^/]+)/.*|\1|')
          REPO=$(echo ${TOOLS_GIT_URL} | sed -E 's|https://github.com/([^/]+)/([^/]+)/tree/([^/]+)/.*|\2|')
          BRANCH=$(echo ${TOOLS_GIT_URL} | sed -E 's|https://github.com/[^/]+/[^/]+/tree/([^/]+)/.*|\1|')
          TOOLS_DIR=$(echo ${TOOLS_GIT_URL} | sed -E 's|https://github.com/[^/]+/[^/]+/tree/[^/]+/(.*?)/?$|\1|')
          if [[ "${TOOLS_DIR: -1}" == "/" ]]; then TOOLS_DIR="${TOOLS_DIR%/}"; fi
          DOWNLOAD_URL="https://codeload.github.com/${OWNER}/${REPO}/tar.gz/${BRANCH}"
          curl "${DOWNLOAD_URL}" | tar -xz --strip-components=4 -C /home/user/tools/ "${REPO}-${BRANCH}/${TOOLS_DIR}"

          # Conditional wait for remote service based on llm_engine
          if [ "$llm_engine" = "tgi" ]; then
            until nc -z -v -w30 ${llm_endpoint_url#http://} 80; do
              echo "Waiting for remote service...";
              sleep 5;
            done
          fi
        envFrom:
        - configMapRef:
            name: config-rag-agent-0
        volumeMounts:
        - name: agent-tools
          mountPath: /home/user/tools/
        securityContext:
          runAsUser: 0
          runAsGroup: 0
      containers:
      - name: rag-agent-container
        image: opea/agent:latest
        command:
        - /bin/sh
        - -c
        args:
        - |
          export port=$(echo ${PORT} | awk '{print int($1)}')
          export temperature=$(printf "%.6f" "${temperature}")
          export recursion_limit=$(echo ${recursion_limit} | awk '{print int($1)}')
          export max_new_tokens=$(echo ${max_new_tokens} | awk '{print int($1)}')

          python agent.py
        ports:
        - containerPort: 9095
        volumeMounts:
        - name: agent-tools
          mountPath: /home/user/tools/
        envFrom:
        - configMapRef:
            name: config-rag-agent-0
      volumes:
      - name: agent-tools
        emptyDir: {}
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-reranking-tei-0
data:
  HEALTHCHECK_ENDPOINT: tei-1:9005
  TEI_RERANKING_ENDPOINT: http://tei-1:9005
  http_proxy: ''
  https_proxy: ''
  no_proxy: ''
  LOGFLAG: ''
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: Service
metadata:
  name: reranking-tei-0
spec:
  type: ClusterIP
  ports:
  - port: 9010
    targetPort: 8000
    protocol: TCP
    name: reranking-tei-0
  selector:
    app: reranking-tei-0
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reranking-tei-0
  labels:
    app: reranking-tei-0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reranking-tei-0
  template:
    metadata:
      labels:
        app: reranking-tei-0
    spec:
      securityContext: {}
      initContainers:
      - name: wait-for-remote-service
        image: busybox
        command:
        - sh
        - -c
        - until nc -z -v -w30 $HEALTHCHECK_ENDPOINT 80; do echo "Waiting for remote service..."; sleep 5; done
        envFrom:
        - configMapRef:
            name: config-reranking-tei-0
      containers:
      - name: reranking-usvc
        envFrom:
        - configMapRef:
            name: config-reranking-tei-0
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        image: opea/reranking:latest
        imagePullPolicy: Always
        ports:
        - name: reranking-usvc
          containerPort: 8000
          protocol: TCP
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        livenessProbe:
          failureThreshold: 24
          httpGet:
            path: v1/health_check
            port: reranking-usvc
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: v1/health_check
            port: reranking-usvc
          initialDelaySeconds: 5
          periodSeconds: 5
        startupProbe:
          failureThreshold: 120
          httpGet:
            path: v1/health_check
            port: reranking-usvc
          initialDelaySeconds: 5
          periodSeconds: 5
        resources: {}
      volumes:
      - name: tmp
        emptyDir: {}
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-retriever-redis-0
data:
  HEALTHCHECK_ENDPOINT: tei-2:9006
  TEI_EMBEDDING_ENDPOINT: http://tei-2:9006
  EMBED_MODEL: ''
  REDIS_URL: redis://redis-vector-store-0:9001
  INDEX_NAME: rag-redis
  EASYOCR_MODULE_PATH: /tmp/.EasyOCR
  http_proxy: ''
  https_proxy: ''
  no_proxy: ''
  HF_HOME: /tmp/.cache/huggingface
  HUGGINGFACEHUB_API_TOKEN: NA
  LOGFLAG: ''
  RETRIEVER_COMPONENT_NAME: OPEA_RETRIEVER_REDIS
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: Service
metadata:
  name: retriever-redis-0
spec:
  type: ClusterIP
  ports:
  - port: 9011
    targetPort: 7000
    protocol: TCP
    name: retriever-redis-0
  selector:
    app: retriever-redis-0
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: apps/v1
kind: Deployment
metadata:
  name: retriever-redis-0
  labels:
    app: retriever-redis-0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: retriever-redis-0
  template:
    metadata:
      labels:
        app: retriever-redis-0
    spec:
      securityContext: {}
      initContainers:
      - name: wait-for-remote-service
        image: busybox
        command:
        - sh
        - -c
        - until nc -z -v -w30 $HEALTHCHECK_ENDPOINT 80; do echo "Waiting for remote service..."; sleep 5; done
        envFrom:
        - configMapRef:
            name: config-retriever-redis-0
      containers:
      - name: retriever-usvc
        command:
        - /bin/sh
        - -c
        args:
        - sed '/^from integrations/ { /from integrations.redis import OpeaRedisRetriever/! s/^/#/ }' opea_retrievers_microservice.py > /tmp/tmp_opea_retrievers_microservice.py && python /tmp/tmp_opea_retrievers_microservice.py
        envFrom:
        - configMapRef:
            name: config-retriever-redis-0
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        image: opea/retriever:latest
        imagePullPolicy: Always
        ports:
        - name: retriever-usvc
          containerPort: 7000
          protocol: TCP
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        livenessProbe:
          failureThreshold: 24
          httpGet:
            path: v1/health_check
            port: retriever-usvc
          initialDelaySeconds: 5
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: v1/health_check
            port: retriever-usvc
          initialDelaySeconds: 5
          periodSeconds: 5
        startupProbe:
          failureThreshold: 120
          httpGet:
            path: v1/health_check
            port: retriever-usvc
          initialDelaySeconds: 5
          periodSeconds: 5
        resources: {}
      volumes:
      - name: tmp
        emptyDir: {}
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-sql-agent-0
data:
  no_proxy: ''
  http_proxy: ''
  https_proxy: ''
  llm_engine: tgi
  strategy: sql_agent_llama
  db_name: easydata
  db_path: mysql+mysqlconnector://admin:xxx@xxxx.rds.amazonaws.com:3306/easydata
  recursion_limit: '10'
  model: Intel/neural-chat-7b-v3-3
  temperature: '0.1'
  max_new_tokens: '8192'
  stream: 'false'
  tools: /home/user/tools/worker_agent_tools.yaml
  require_human_feedback: 'false'
  llm_endpoint_url: http://tgi-0:9004
  PORT: '9096'
  OPENAI_API_KEY: NA
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: Service
metadata:
  name: sql-agent-0
spec:
  selector:
    app: sql-agent-0
  ports:
  - protocol: TCP
    port: 9012
    targetPort: 9096
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sql-agent-0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sql-agent-0
  template:
    metadata:
      labels:
        app: sql-agent-0
    spec:
      initContainers:
      - name: agentqna-tools
        image: curlimages/curl:latest
        command:
        - /bin/sh
        - -c
        args:
        - |
          TOOLS_GIT_URL="https://github.com/wanhakim/GenAIStudio/tree/main/app-backend/templates/tools"
          OWNER=$(echo ${TOOLS_GIT_URL} | sed -E 's|https://github.com/([^/]+)/([^/]+)/tree/([^/]+)/.*|\1|')
          REPO=$(echo ${TOOLS_GIT_URL} | sed -E 's|https://github.com/([^/]+)/([^/]+)/tree/([^/]+)/.*|\2|')
          BRANCH=$(echo ${TOOLS_GIT_URL} | sed -E 's|https://github.com/[^/]+/[^/]+/tree/([^/]+)/.*|\1|')
          TOOLS_DIR=$(echo ${TOOLS_GIT_URL} | sed -E 's|https://github.com/[^/]+/[^/]+/tree/[^/]+/(.*?)/?$|\1|')
          if [[ "${TOOLS_DIR: -1}" == "/" ]]; then TOOLS_DIR="${TOOLS_DIR%/}"; fi
          DOWNLOAD_URL="https://codeload.github.com/${OWNER}/${REPO}/tar.gz/${BRANCH}"
          curl "${DOWNLOAD_URL}" | tar -xz --strip-components=4 -C /home/user/tools/ "${REPO}-${BRANCH}/${TOOLS_DIR}"

          # Conditional wait for remote service based on llm_engine
          if [ "$llm_engine" = "tgi" ]; then
            until nc -z -v -w30 ${llm_endpoint_url#http://} 80; do
              echo "Waiting for remote service...";
              sleep 5;
            done
          fi
        envFrom:
        - configMapRef:
            name: config-sql-agent-0
        volumeMounts:
        - name: agent-tools
          mountPath: /home/user/tools/
        securityContext:
          runAsUser: 0
          runAsGroup: 0
      containers:
      - name: sql-agent-container
        image: opea/agent:latest
        command:
        - /bin/sh
        - -c
        args:
        - |
          export port=$(echo ${PORT} | awk '{print int($1)}')
          export temperature=$(printf "%.6f" "${temperature}")
          export recursion_limit=$(echo ${recursion_limit} | awk '{print int($1)}')
          export max_new_tokens=$(echo ${max_new_tokens} | awk '{print int($1)}')

          python agent.py
        ports:
        - containerPort: 9096
        volumeMounts:
        - name: agent-tools
          mountPath: /home/user/tools/
        envFrom:
        - configMapRef:
            name: config-sql-agent-0
      volumes:
      - name: agent-tools
        emptyDir: {}
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: ConfigMap
metadata:
  name: config-supervisor-agent-0
data:
  no_proxy: ''
  http_proxy: ''
  https_proxy: ''
  llm_engine: tgi
  strategy: react_llama
  recursion_limit: '10'
  model: Intel/neural-chat-7b-v3-3
  temperature: '0.1'
  max_new_tokens: '8192'
  stream: 'false'
  tools: /home/user/tools/supervisor_agent_tools.yaml
  require_human_feedback: 'false'
  llm_endpoint_url: http://tgi-0:9004
  WORKER_AGENT_URL: http://rag-agent-0:9009
  SQL_AGENT_URL: http://sql-agent-0:9012
  PORT: '9090'
  OPENAI_API_KEY: NA
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: Service
metadata:
  name: supervisor-agent-0
spec:
  selector:
    app: supervisor-agent-0
  ports:
  - protocol: TCP
    port: 9013
    targetPort: 9090
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: apps/v1
kind: Deployment
metadata:
  name: supervisor-agent-0
spec:
  replicas: 1
  selector:
    matchLabels:
      app: supervisor-agent-0
  template:
    metadata:
      labels:
        app: supervisor-agent-0
    spec:
      initContainers:
      - name: agentqna-tools
        image: curlimages/curl:latest
        command:
        - /bin/sh
        - -c
        args:
        - |
          TOOLS_GIT_URL="https://github.com/wanhakim/GenAIStudio/tree/main/app-backend/templates/tools"
          OWNER=$(echo ${TOOLS_GIT_URL} | sed -E 's|https://github.com/([^/]+)/([^/]+)/tree/([^/]+)/.*|\1|')
          REPO=$(echo ${TOOLS_GIT_URL} | sed -E 's|https://github.com/([^/]+)/([^/]+)/tree/([^/]+)/.*|\2|')
          BRANCH=$(echo ${TOOLS_GIT_URL} | sed -E 's|https://github.com/[^/]+/[^/]+/tree/([^/]+)/.*|\1|')
          TOOLS_DIR=$(echo ${TOOLS_GIT_URL} | sed -E 's|https://github.com/[^/]+/[^/]+/tree/[^/]+/(.*?)/?$|\1|')
          if [[ "${TOOLS_DIR: -1}" == "/" ]]; then TOOLS_DIR="${TOOLS_DIR%/}"; fi
          DOWNLOAD_URL="https://codeload.github.com/${OWNER}/${REPO}/tar.gz/${BRANCH}"
          curl "${DOWNLOAD_URL}" | tar -xz --strip-components=4 -C /home/user/tools/ "${REPO}-${BRANCH}/${TOOLS_DIR}"

          # Conditional wait for remote service based on llm_engine
          if [ "$llm_engine" = "tgi" ]; then
            until nc -z -v -w30 ${llm_endpoint_url#http://} 80; do
              echo "Waiting for remote service...";
              sleep 5;
            done
          fi
        envFrom:
        - configMapRef:
            name: config-supervisor-agent-0
        volumeMounts:
        - name: agent-tools
          mountPath: /home/user/tools/
        securityContext:
          runAsUser: 0
          runAsGroup: 0
      containers:
      - name: supervisor-agent-container
        image: opea/agent:latest
        command:
        - /bin/sh
        - -c
        args:
        - |
          export port=$(echo ${PORT} | awk '{print int($1)}')
          export temperature=$(printf "%.6f" "${temperature}")
          export recursion_limit=$(echo ${recursion_limit} | awk '{print int($1)}')
          export max_new_tokens=$(echo ${max_new_tokens} | awk '{print int($1)}')

          python agent.py
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: agent-tools
          mountPath: /home/user/tools/
        envFrom:
        - configMapRef:
            name: config-supervisor-agent-0
      volumes:
      - name: agent-tools
        emptyDir: {}
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-backend-ports-env
data:
  .env: |
    embedding_tei_langchain_0_port=9007
    prepare_doc_redis_prep_0_port=9008
    rag_agent_0_port=9009
    reranking_tei_0_port=9010
    retriever_redis_0_port=9011
    sql_agent_0_port=9012
    supervisor_agent_0_port=9013
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-backend-config
data:
  workflow-info.json: |
    {
            "chat_completion_ids": [
                "chat_completion_0"
            ],
            "chat_input_ids": [
                "chat_input_0"
            ],
            "doc_input_ids": [
                "doc_input_0"
            ],
            "id": "a30346d2-b3b7-4fef-9f7c-48ea343a36eb",
            "name": "AgentQnA",
            "nodes": {
                "chat_completion_0": {
                    "category": "Controls",
                    "connected_from": [
                        "opea_service@supervisor_agent_0"
                    ],
                    "connected_to": [],
                    "hideOutput": true,
                    "id": "chat_completion_0",
                    "inMegaservice": false,
                    "name": "chat_completion",
                    "params": {},
                    "version": 1
                },
                "chat_input_0": {
                    "category": "Controls",
                    "connected_from": [],
                    "connected_to": [
                        "opea_service@supervisor_agent_0"
                    ],
                    "id": "chat_input_0",
                    "inMegaservice": false,
                    "name": "chat_input",
                    "params": {},
                    "version": 1
                },
                "doc_input_0": {
                    "category": "Controls",
                    "connected_from": [],
                    "connected_to": [
                        "opea_service@prepare_doc_redis_prep_0"
                    ],
                    "id": "doc_input_0",
                    "inMegaservice": false,
                    "name": "doc_input",
                    "params": {},
                    "version": 1
                },
                "opea_service@embedding_tei_langchain_0": {
                    "category": "Embeddings",
                    "connected_from": [
                        "opea_service@rag_agent_0"
                    ],
                    "connected_to": [
                        "opea_service@retriever_redis_0"
                    ],
                    "dependent_services": {
                        "tei": {
                            "huggingFaceToken": "NA",
                            "modelName": "BAAI/bge-large-en-v1.5"
                        }
                    },
                    "id": "opea_service@embedding_tei_langchain_0",
                    "inMegaservice": true,
                    "name": "opea_service@embedding_tei_langchain",
                    "params": {},
                    "version": 1
                },
                "opea_service@prepare_doc_redis_prep_0": {
                    "category": "Data Preparation",
                    "connected_from": [
                        "doc_input_0"
                    ],
                    "connected_to": [
                        "redis_vector_store_0"
                    ],
                    "dependent_services": {
                        "tei": {
                            "huggingFaceToken": "NA",
                            "modelName": "BAAI/bge-large-en-v1.5"
                        }
                    },
                    "id": "opea_service@prepare_doc_redis_prep_0",
                    "inMegaservice": false,
                    "name": "opea_service@prepare_doc_redis_prep",
                    "params": {},
                    "version": 1
                },
                "opea_service@rag_agent_0": {
                    "category": "Agent",
                    "connected_from": [
                        "opea_service@supervisor_agent_0",
                        "opea_service@reranking_tei_0"
                    ],
                    "connected_to": [
                        "opea_service@embedding_tei_langchain_0"
                    ],
                    "dependent_services": {
                        "tgi": {
                            "huggingFaceToken": "NA",
                            "modelName": "Intel/neural-chat-7b-v3-3"
                        }
                    },
                    "id": "opea_service@rag_agent_0",
                    "inMegaservice": false,
                    "megaserviceClient": true,
                    "name": "opea_service@rag_agent",
                    "params": {
                        "llmEngine": "tgi",
                        "maxNewToken": 8192,
                        "openaiApiKey": "NA",
                        "recursionLimit": 10,
                        "temperature": 0.1
                    },
                    "version": 1
                },
                "opea_service@reranking_tei_0": {
                    "category": "Reranking",
                    "connected_from": [
                        "opea_service@retriever_redis_0"
                    ],
                    "connected_to": [
                        "opea_service@rag_agent_0"
                    ],
                    "dependent_services": {
                        "tei": {
                            "huggingFaceToken": "NA",
                            "modelName": "BAAI/bge-reranker-base"
                        }
                    },
                    "id": "opea_service@reranking_tei_0",
                    "inMegaservice": true,
                    "name": "opea_service@reranking_tei",
                    "params": {
                        "top_n": 1
                    },
                    "version": 1
                },
                "opea_service@retriever_redis_0": {
                    "category": "Retriever",
                    "connected_from": [
                        "opea_service@embedding_tei_langchain_0",
                        "redis_vector_store_0"
                    ],
                    "connected_to": [
                        "opea_service@reranking_tei_0"
                    ],
                    "dependent_services": {
                        "tei": {
                            "huggingFaceToken": "NA",
                            "modelName": "BAAI/bge-base-en-v1.5"
                        }
                    },
                    "id": "opea_service@retriever_redis_0",
                    "inMegaservice": true,
                    "name": "opea_service@retriever_redis",
                    "params": {
                        "search_type": "similarity"
                    },
                    "version": 1
                },
                "opea_service@sql_agent_0": {
                    "category": "Agent",
                    "connected_from": [
                        "opea_service@supervisor_agent_0"
                    ],
                    "connected_to": [],
                    "dependent_services": {
                        "tgi": {
                            "huggingFaceToken": "NA",
                            "modelName": "Intel/neural-chat-7b-v3-3"
                        }
                    },
                    "id": "opea_service@sql_agent_0",
                    "inMegaservice": false,
                    "name": "opea_service@sql_agent",
                    "params": {
                        "db_name": "easydata",
                        "db_path": "mysql+mysqlconnector://admin:password@sql-db.ceptxp9hvnxa.us-east-1.rds.amazonaws.com:3306/easydata",
                        "llmEngine": "tgi",
                        "maxNewToken": 8192,
                        "openaiApiKey": "NA",
                        "recursionLimit": 10,
                        "temperature": 0.1
                    },
                    "version": 1
                },
                "opea_service@supervisor_agent_0": {
                    "category": "Agent",
                    "connected_from": [
                        "chat_input_0"
                    ],
                    "connected_to": [
                        "opea_service@rag_agent_0",
                        "opea_service@sql_agent_0",
                        "chat_completion_0"
                    ],
                    "dependent_services": {
                        "tgi": {
                            "huggingFaceToken": "NA",
                            "modelName": "Intel/neural-chat-7b-v3-3"
                        }
                    },
                    "id": "opea_service@supervisor_agent_0",
                    "inMegaservice": true,
                    "name": "opea_service@supervisor_agent",
                    "params": {
                        "llmEngine": "tgi",
                        "maxNewToken": 8192,
                        "openaiApiKey": "NA",
                        "recursionLimit": 10,
                        "temperature": 0.1
                    },
                    "version": 1
                },
                "redis_vector_store_0": {
                    "category": "VectorStores",
                    "connected_from": [
                        "opea_service@prepare_doc_redis_prep_0"
                    ],
                    "connected_to": [
                        "opea_service@retriever_redis_0"
                    ],
                    "id": "redis_vector_store_0",
                    "inMegaservice": true,
                    "name": "redis_vector_store",
                    "params": {},
                    "version": 1
                }
            },
            "ui_config": {
                "chat_completion": true,
                "chat_input": true,
                "doc_input": true
            }
        }
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: Service
metadata:
  name: app-backend
spec:
  type: ClusterIP
  ports:
  - port: 8888
    targetPort: 8888
    protocol: TCP
    name: app-backend
  selector:
    app: app-backend
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-backend
  labels:
    app: app-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-backend
  template:
    metadata:
      labels:
        app: app-backend
    spec:
      securityContext: null
      containers:
      - name: app-backend
        env:
        - name: USE_NODE_ID_AS_IP
          value: 'true'
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        image: opea/app-backend:latest
        imagePullPolicy: Always
        volumeMounts:
        - mountPath: /tmp
          name: tmp
        - mountPath: /home/user/config/workflow-info.json
          name: workflow-info-volume
          subPath: workflow-info.json
        - mountPath: /home/user/config/.env
          name: ports-env
          subPath: .env
        ports:
        - name: app-backend
          containerPort: 8888
          protocol: TCP
        resources: null
      volumes:
      - name: tmp
        emptyDir: {}
      - name: workflow-info-volume
        configMap:
          name: app-backend-config
      - name: ports-env
        configMap:
          name: app-backend-ports-env
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: Service
metadata:
  name: app-frontend
spec:
  type: ClusterIP
  ports:
  - port: 5175
    targetPort: 80
    protocol: TCP
    name: app-frontend
  selector:
    app: app-frontend
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-frontend
  labels:
    app: app-frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: app-frontend
  template:
    metadata:
      labels:
        app: app-frontend
    spec:
      securityContext: {}
      containers:
      - name: app-frontend
        env:
        - name: VITE_APP_BACKEND_SERVICE_URL
          value: /v1/app-backend
        - name: VITE_APP_EMBEDDINGS_SERVICE_URL
          value: /v1/embeddings
        - name: VITE_APP_DATA_PREP_SERVICE_URL
          value: /v1/dataprep
        - name: VITE_APP_RERANKING_SERVICE_URL
          value: /v1/reranking
        - name: VITE_APP_RETRIEVAL_SERVICE_URL
          value: /v1/retrieval
        securityContext: {}
        image: opea/app-frontend:latest
        imagePullPolicy: Always
        ports:
        - name: ui
          containerPort: 80
          protocol: TCP
        resources: {}
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      volumes:
      - name: tmp
        emptyDir: {}
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: ConfigMap
metadata:
  name: app-nginx-config
data:
  default.conf: |
    # Copyright (C) 2024 Intel Corporation
    # SPDX-License-Identifier: Apache-2.0

    server {
        listen       80;
        listen  [::]:80;

        proxy_connect_timeout 600;
        proxy_send_timeout 600;
        proxy_read_timeout 600;
        send_timeout 600;

        client_max_body_size 10G;

        location /home {
            alias  /usr/share/nginx/html/index.html;
        }

        location / {
            proxy_pass http://app-frontend:5175;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /v1/app-backend {
            proxy_pass http://app-backend:8888;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Disable buffering for SSE
            proxy_buffering off;
            proxy_cache off;
            proxy_http_version 1.1;
            proxy_set_header Connection '';
            chunked_transfer_encoding off;
        }

        location /v1/embeddings {
            proxy_pass http://embedding-tei-langchain-0:9007;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /v1/dataprep {
            proxy_pass http://prepare-doc-redis-prep-0:9008;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /v1/reranking {
            proxy_pass http://reranking-tei-0:9010;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /v1/retrieval {
            proxy_pass http://retriever-redis-0:9011;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: Service
metadata:
  name: app-nginx
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app: app-nginx
  type: NodePort
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-nginx
  labels:
    app: app-nginx
spec:
  selector:
    matchLabels:
      app: app-nginx
  template:
    metadata:
      labels:
        app: app-nginx
    spec:
      containers:
      - image: nginx:1.27.1
        imagePullPolicy: IfNotPresent
        name: nginx
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: nginx-config-volume
      securityContext: {}
      volumes:
      - configMap:
          defaultMode: 420
          name: app-nginx-config
        name: nginx-config-volume
---
# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: model-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 50Gi
  storageClassName: local-path
