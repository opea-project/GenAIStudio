# Copyright (C) 2024 Intel Corporation
# SPDX-License-Identifier: Apache-2.0

name: Call - E2E Test
permissions: read-all
on:
  workflow_call:
    inputs:
      node:
        default: "xeon"
        required: true
        type: string
      tag:
        default: "latest"
        required: false
        type: string

jobs:
  call-e2e-test:
    runs-on: "k8s-${{ inputs.node }}"
    steps:
      - name: Clean Up Working Directory
        run: sudo rm -rf ${{github.workspace}}/*

      - name: Get Checkout Ref
        run: |
          if [ "${{ github.event_name }}" == "pull_request" ] || [ "${{ github.event_name }}" == "pull_request_target" ]; then
          echo "CHECKOUT_REF=refs/pull/${{ github.event.number }}/merge" >> $GITHUB_ENV
          else
            echo "CHECKOUT_REF=${{ github.ref }}" >> $GITHUB_ENV
          fi

      - name: Checkout out Repo
        uses: actions/checkout@v4
        with:
          ref: ${{ env.CHECKOUT_REF }}
          fetch-depth: 0

      - name: Update Manifest
        run: |
          find . -type f -name 'studio-manifest.yaml' -exec sed -i 's/value: opea/value: ${REGISTRY}/g' {} \;
        working-directory: ${{ github.workspace }}/setup-scripts/setup-genai-studio/manifests/

      - name: Deploy GenAI Studio
        run: |
          if kubectl get namespace studio; then
            kubectl delete -f manifests/studio-manifest.yaml || true
            kubectl wait --for=delete pod --all --namespace=studio --timeout=300s
          fi
          if kubectl get namespace monitoring; then
            kubectl delete -f manifests/monitoring-manifest.yaml || true
            kubectl wait --for=delete pod --all --namespace=monitoring --timeout=300s
          fi
          sleep 5
          sudo apt install ansible -y
          ansible-playbook genai-studio.yml -e "container_registry=${OPEA_IMAGE_REPO}opea" -e "container_tag=${{ inputs.tag }}"
          sleep 5
          kubectl wait --for=condition=ready pod --all --namespace=studio --timeout=300s --field-selector=status.phase!=Succeeded
          kubectl wait --for=condition=ready pod --all --namespace=monitoring --timeout=300s --field-selector=status.phase!=Succeeded
        working-directory: ${{ github.workspace }}/setup-scripts/setup-genai-studio/

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.18.0'
      
      - name: Install Dependencies
        run: |
          npm install
          npx playwright install
          npx playwright install-deps
        working-directory: ${{ github.workspace }}/tests/playwright

      - name: Update Playwright Config
        run: |
          NODE_IP=$(kubectl get nodes -o jsonpath='{.items[0].status.addresses[?(@.type=="InternalIP")].address}')
          sed -i "s|baseURL:.*|baseURL: \"http://$NODE_IP:30007\",|" playwright.config.js
        working-directory: ${{ github.workspace }}/tests/playwright

      - name: Run Playwright Tests
        run: npx playwright test
        working-directory: ${{ github.workspace }}/tests/playwright

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-test-results
          path: ${{ github.workspace }}/tests/playwright/playwright-report
      
      - name: Cleanup sandbox namespaces
        if: always()
        run: |
          for ns in $(kubectl get namespaces -o jsonpath='{.items[*].metadata.name}' | tr ' ' '\n' | grep '^sandbox-'); do
            kubectl delete namespace $ns || true
          done

